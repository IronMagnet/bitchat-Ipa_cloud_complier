# ======================================================
# GitHub Actions Workflow: macos-build.yml
# Purpose: Build macOS BitChat .app and upload as artifact
# ======================================================

name: Build macOS App

on:
  # Run on push and PR to main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-macos-app:
    name: Build BitChat macOS .app
    runs-on: macos-13  # macOS 13 (Ventura) or later
    # Notes:
    #  - Update to macos-14 if your deployment target ever moves up.

    steps:
    # ✅ Step 1: Checkout the source code
    - name: Checkout repository
      uses: actions/checkout@v4

    # ✅ Step 2: Set up Xcode
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.4'
      # Notes:
      #  - Keep this Xcode version aligned with your project's deployment target

    # ✅ Step 3: Install XcodeGen
    - name: Install XcodeGen
      run: brew install xcodegen

    # ✅ Step 4: Generate Xcode project from project.yml
    - name: Generate Xcode project
      run: xcodegen generate

    # ✅ Step 5: Build the macOS app in Release configuration
    - name: Build macOS .app
      run: |
        xcodebuild \
          -project bitchat.xcodeproj \
          -scheme "bitchat (macOS)" \
          -configuration Release \
          -derivedDataPath build

    # ✅ Step 6: Locate the built .app and copy it to a friendly location
    - name: Prepare .app for upload
      run: |
        mkdir -p dist
        APP_PATH=$(find build/Build/Products/Release -name "*.app" -type d | head -n 1)
        echo "Found .app at: $APP_PATH"
        cp -R "$APP_PATH" dist/

    # ✅ Step 7: Upload the .app as an artifact
    - name: Upload .app artifact
      uses: actions/upload-artifact@v4
      with:
        name: BitChat-macOS-app
        path: dist/*.app

# ======================================================
# Notes for maintainers:
# - This workflow does NOT code-sign the .app. Gatekeeper will warn users.
# - To add signing, you would need to inject secrets with a Developer ID certificate and use `codesign`.
# - Compatible with macOS Ventura+ and Xcode 16.4.
# - If you change deployment target or Xcode version, adjust `macos-*` and `xcode-version` accordingly.
# ======================================================
