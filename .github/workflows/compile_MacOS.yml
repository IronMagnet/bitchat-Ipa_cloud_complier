# Step 10: Extract and package .app (Fixed for macOS)
      - name: Extract and package .app
        run: |
          set -o pipefail
          
          echo "üì¶ Locating built .app bundle..."
          
          # Find the .app bundle in DerivedData
          APP_PATH=$(find "${{ env.BUILD_PATH }}/DerivedData" -name "*.app" -type d | head -n 1)
          
          if [ -z "$APP_PATH" ]; then
            echo "‚ùå Error: No .app bundle found in build output"
            echo "üìÅ DerivedData contents:"
            find "${{ env.BUILD_PATH }}/DerivedData" -name "*.app" -o -name "Products" | head -10
            exit 1
          fi
          
          echo "‚úÖ Found app bundle: $APP_PATH"
          
          # Get app name for consistent naming
          APP_NAME=$(basename "$APP_PATH" .app)
          echo "üì± App name: $APP_NAME"
          
          # Create distribution directory (no Payload folder for macOS!)
          mkdir -p "${{ env.BUILD_PATH }}/distribution"
          
          # Copy the .app bundle directly
          echo "üìÅ Copying .app bundle..."
          cp -R "$APP_PATH" "${{ env.BUILD_PATH }}/distribution/"
          
          # Remove any existing code signatures to make it truly unsigned
          echo "üîì Removing existing code signatures..."
          find "${{ env.BUILD_PATH }}/distribution/$APP_NAME.app" -name "_CodeSignature" -type d -exec rm -rf {} + 2>/dev/null || true
          find "${{ env.BUILD_PATH }}/distribution/$APP_NAME.app" -name "*.provisionprofile" -delete 2>/dev/null || true
          
          # Verify it's a macOS app bundle
          echo "üîç Verifying macOS app bundle..."
          if [ -f "${{ env.BUILD_PATH }}/distribution/$APP_NAME.app/Contents/Info.plist" ]; then
            echo "‚úÖ Valid macOS app bundle structure (has Contents/Info.plist)"
          else
            echo "‚ö†Ô∏è Warning: App bundle might not be macOS format"
            ls -la "${{ env.BUILD_PATH }}/distribution/$APP_NAME.app/"
          fi
          
          # Create the ZIP file with correct naming
          echo "üì¶ Creating ZIP archive..."
          cd "${{ env.BUILD_PATH }}/distribution"
          zip -r "../${APP_NAME}-macOS.zip" "$APP_NAME.app" -q
          
          # Verify ZIP was created with proper structure
          if [ -f "${{ env.BUILD_PATH }}/${APP_NAME}-macOS.zip" ]; then
            echo "‚úÖ macOS app ZIP created successfully"
            ls -la "${{ env.BUILD_PATH }}/${APP_NAME}-macOS.zip"
            
            # Show ZIP contents for verification (should show .app directly, no Payload folder)
            echo "üìã ZIP contents:"
            unzip -l "${{ env.BUILD_PATH }}/${APP_NAME}-macOS.zip" | head -10
            
            # Show app bundle info
            echo "üìä App bundle structure:"
            unzip -l "${{ env.BUILD_PATH }}/${APP_NAME}-macOS.zip" | grep -E "(Contents/|MacOS/)" | head -5
          else
            echo "‚ùå Error: ZIP file not created"
            ls -la "${{ env.BUILD_PATH }}/"
            exit 1
          fi
