# =====================================
# GitHub Actions Workflow: compile.yml
# Purpose: Build & export BitChat as .ipa (no tests)
# =====================================

name: Compile Only

on:
  # Trigger workflow on push or PR to main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile:
    # Use macOS runner because Xcode only runs on macOS
    runs-on: macos-15  # Update this if GitHub adds newer macOS runners (e.g., macos-16)

    steps:
      # Step 1: Checkout the repo source code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Setup Xcode environment with specified version
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.4"  # Update Xcode version if BitChat requires newer SDK or features

      # Step 3: Generate Xcode project from project.yml using XcodeGen
      - name: XcodeGen
        uses: xavierLowmiller/xcodegen-action@1.2.4
        with:
          spec: project.yml      # Path to project.yml (change if moved/renamed)
          version: 2.43.0        # Version of XcodeGen; update if you upgrade locally

      # Step 4: Archive the app for device deployment
      - name: Archive app
        run: |
          set -o pipefail && xcodebuild archive \
            -scheme "bitchat (iOS)" \              # Must exactly match scheme in project.yml (case and spacing!)
            -sdk iphoneos \                        # Use iOS device SDK (not simulator)
            -configuration Release \               # Use Release build configuration
            -archivePath $GITHUB_WORKSPACE/build/BitChat.xcarchive  # Output archive path; can be changed

      # Step 5: Export unsigned IPA for sideloading or manual signing
      - name: Export IPA
        run: |
          # Create export options plist to control IPA export behavior
          cat > ExportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>          # Use 'development' for dev signing (change if distributing via App Store)
            <key>signingStyle</key>
            <string>automatic</string>            # Automatic signing; change to manual if needed
            <key>compileBitcode</key>
            <false/>                             # Disable bitcode compilation to speed export
            <key>stripSwiftSymbols</key>
            <true/>                             # Reduce IPA size by stripping debug symbols
            <key>destination</key>
            <string>export</string>               # Export directory
            <key>thinning</key>
            <string>&lt;none&gt;</string>         # Disable app thinning (universal IPA)
          </dict>
          </plist>
          EOF

          # Export the archive into an IPA using the above options
          xcodebuild -exportArchive \
            -archivePath $GITHUB_WORKSPACE/build/BitChat.xcarchive \
            -exportPath $GITHUB_WORKSPACE/build/ipa \
            -exportOptionsPlist ExportOptions.plist

      # Step 6: Upload the IPA as a downloadable artifact in GitHub Actions
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: BitChat-ipa            # Artifact name (can be changed)
          path: build/ipa             # Path to exported IPA directory

# ===
# NOTES & CUSTOMIZATION:
# - Scheme name (-scheme) must exactly match the scheme in project.yml; here: "bitchat (iOS)"
#   If project.yml changes or new schemes are added, update this accordingly.
# - Xcode version should match the iOS SDK you want to target.
# - Archive path and export paths can be changed to suit your repo or workflow preferences.
#
